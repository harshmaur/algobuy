// ResultsDisplay component
@mixin results-display {
  // Each product has a "card". In search results it is set to measure a third
  // of the screen and cards flow from left to right, top to bottom (the classic
  // flow); when "large" (a product shown alone), the card takes 60% of the area
  // and is centered.
  .product {
    position: relative;
    display: inline-block;
    width: 30%;

    margin: 1.6%;
    padding: 20px;
    padding-bottom: 40px;

    border: 3px solid $light-grey;

    background-color: $white;
    color: $dark-grey;

    -webkit-transition: transform .2s ease-out, box-shadow .2s;
    -moz-transition: transform .2s ease-out, box-shadow .2s;
    -ms-transition: transform .2s ease-out, box-shadow .2s;
    -o-transition: transform .2s ease-out, box-shadow .2s;
    transition: transform .2s ease-out, box-shadow .2s;

    // Pop the card up when hovered
    &:hover {
      -webkit-transform: scale(1.05);
      -moz-transform: scale(1.05);
      -ms-transform: scale(1.05);
      -o-transform: scale(1.05);
      transform: scale(1.05);

      box-shadow: 3px 4px 15px 0 rgba(0, 0, 0, .6);
    }

    // The 'button-hover' class is set on the product <div> when its
    // add to/remove from cart button is hovered. It is used to change the
    // card's border color accordingly to the button color.
    &.button-hover {
      border-color: $green;
    }

    &.in-cart {
      border-color: $green;

      &.button-hover {
        border-color: $red;
      }
    }

    .picture {
      text-align: center;
    }

    .infos {
      h3 {
        @include font-smoothing(on);
        font-family: 'Raleway', sans-serif;

        text-align: center;

        em {
          font-family: "Open Sans", sans-serif;
          font-weight: 800;
          font-style: normal;
        }
      }

      .price {
        font-weight: 800;
      }

      .description {
        em {
          font-weight: 800;
          font-style: normal;
        }
      }
    }

    // Basic styles for the add to/remove from cart button
    // It takes the entire bottom of the screen and, because we use a scale
    // transform to pop up the card when it's hovered, we spread the button one
    // pixel over the card's border to avoid having a subpixel separation
    // between the button and the borders when the card is scaled up.
    %cart-badge {
      @include font-smoothing(on);

      position: absolute;

      bottom: -1px;
      left: -1px;
      right: -1px;

      padding: 10px;

      color: $white;

      text-align: center;
      font-weight: 600;
    }

    .add-to-cart {
      @extend %cart-badge;
      background-color: $light-grey;

      cursor: pointer;

      &:hover {
        background-color: $green;
      }
    }

    .in-cart {
      @extend %cart-badge;

      background-color: $green;
    }

    .remove-from-cart {
      @extend %cart-badge;

      background-color: $red;
      cursor: pointer;
    }

    &.large {
      width: 60%;
      margin: 0 20%;

      .picture {
        float: left;

        margin: 0 20px 20px 0;

        text-align: left;
      }

      .infos {
        h3 {
          margin-top: 0;
          text-align: left;
        }
      }
    }
  }
}
